{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "MyAppBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": "my-application-bucket",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "HEAD",
                "POST",
                "DELETE"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        }
      }
    },
    "UserTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          },
          {
            "AttributeName": "role",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "role",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        },
        "TableName": "User",
        
      }
    },
    "ApplicationUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "admin_only",
              "Priority": 1
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "AutoVerifiedAttributes": [
          "email"
        ],
        "DeviceConfiguration": {
          "ChallengeRequiredOnNewDevice": false,
          "DeviceOnlyRememberedOnUserPrompt": false
        },
        "MfaConfiguration": "OFF",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 7,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 365
          }
        },
        "Schema": [
          {
            "AttributeDataType": "String",
            "DeveloperOnlyAttribute": false,
            "Mutable": true,
            "Name": "email",
            "Required": true,
            
          },
          {
            "AttributeDataType": "String",
            "DeveloperOnlyAttribute": false,
            "Mutable": true,
            "Name": "name",
            "Required": false,
            
          },
          {
            "AttributeDataType": "String",
            "DeveloperOnlyAttribute": false,
            "Mutable": true,
            "Name": "tenantid",
            "Required": false,
            
          },
          {
            "AttributeDataType": "String",
            "DeveloperOnlyAttribute": false,
            "Mutable": true,
            "Name": "role",
            "Required": false,
            
          }
        ],
        "UsernameAttributes": [
          "email"
        ],
        "UsernameConfiguration": {
          "CaseSensitive": false
        },
        "UserPoolName": "Application-User-Pool",
        
      }
    },
    "ApplicationClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "ApplicationWebApplication",
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": false,
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 365,
        "SupportedIdentityProviders": [
          "COGNITO"
        ],
        "UserPoolId": {
          "Ref": "ApplicationUserPool"
        }
      }
    },
    "ApplicationIdentityPool": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowClassicFlow": false,
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "ApplicationClient"
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "ApplicationUserPool",
                "ProviderName"
              ]
            },
            "ServerSideTokenCheck": false
          }
        ],
        "IdentityPoolName": "Application_Identity_Pool"
      }
    },
    "CognitoUnAuthorizedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ],
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "ApplicationIdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CognitoUnauthorizedPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "mobileanalytics:PutEvents",
                    "cognito-sync:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": "ApplicationCognitoUnAuthorizedRole"
      }
    },
    "CognitoAuthorizedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ],
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "ApplicationIdentityPool"
                  }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CognitoAuthorizedPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "mobileanalytics:PutEvents",
                    "cognito-sync:*",
                    "cognito-identity:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": "ApplicationCognitoAuthorizedRole"
      }
    },
    "IdentityPoolRoleMapping": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "ApplicationIdentityPool"
        },
        "RoleMappings": {
          "cognitoProvider": {
            "IdentityProvider": {
              "Fn::Join": [
                "",
                [
                  "cognito-idp.",
                  {
                    "Fn::Sub": "${AWS::Region}"
                  },
                  ".amazonaws.com/",
                  {
                    "Ref": "ApplicationUserPool"
                  },
                  ":",
                  {
                    "Ref": "ApplicationClient"
                  }
                ]
              ]
            },
            "AmbiguousRoleResolution": "Deny",
            "Type": "Token"
          }
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "CognitoAuthorizedRole",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "CognitoUnAuthorizedRole",
              "Arn"
            ]
          }
        }
      }
    },
    "TestIDPoolRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRoleWithWebIdentity"
              ],
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "ApplicationIdentityPool"
                  }
                }
              }
            }
          ]
        },
        "Policies": [
          
        ],
        "RoleName": "IDPoolAdminRole"
      }
    },
    "UserpoolTestGroup": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "Description": "Test group creation",
        "GroupName": "Admin",
        "Precedence": 1,
        "RoleArn": {
          "Fn::GetAtt": [
            "TestIDPoolRole",
            "Arn"
          ]
        },
        "UserPoolId": {
          "Ref": "ApplicationUserPool"
        }
      }
    },
    "TestSNSPolicy": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "TestSNSTopicName"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ],
        "RoleName": "Basic-Lambda-Execution-Role"
      }
    },
    "TestLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "java8"
        ],
        "Content": {
          "S3Bucket": "application-lambda-functions-code",
          "S3Key": "java.zip"
        },
        "LayerName": "Application-Test-Layer"
      }
    },
    "TestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "application-lambda-functions-code",
          "S3Key": "application-1.0.0.jar"
        },
        "FunctionName": "TestFunction",
        "Handler": "com.poc.applicationname.handler.HandlerName",
        "Layers": [
          {
            "Ref": "TestLambdaLayer"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "java8",
        "Timeout": 900
      }
    },
    "TestApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "Fn::Transform": {
            "Name": "AWS::Include",
            "Parameters": {
              "Location": {
                "Fn::Sub": "s3://application-lambda-functions-code/swagger.json"
              }
            }
          }
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "FailOnWarnings": false
      }
    }
  }
}